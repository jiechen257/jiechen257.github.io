{"title":"为Vue组件添加非响应式数据","date":"2022-04-27T21:47:50.000Z","date_formatted":{"ll":"Apr 27, 2022","L":"04/27/2022","MM-DD":"04-27"},"link":"2022/04/27/为Vue组件添加非响应式数据","comments":true,"tags":["vue"],"categories":["front-end"],"updated":"2023-07-11T08:54:19.192Z","content":"<blockquote>\n<p>vue的数据来源包括 <code>data</code>，<code>computed</code>，<code>自定义options(vm.$options)</code>，<code>实例外(export default外)</code></p>\n</blockquote>\n<p>在vue组件中data内函数返回的对象默认是响应式的，这种响应式被用在模板更新、watch变更、computed依赖</p>\n<p>此外还有一种场景，数据本身并不需要响应式，多见于 <code>常量</code> 或者一些<code>第三方库</code>，这里就总结下添加非响应式数据的几种方式</p>\n<h2 id=\"避免把数据挂载到data内函数返回的对象上\">避免把数据挂载到data内函数返回的对象上<a title=\"#避免把数据挂载到data内函数返回的对象上\" href=\"#避免把数据挂载到data内函数返回的对象上\"></a></h2>\n<h3 id=\"1.-将数据定义在export-default之外\">1. 将数据定义在export default之外<a title=\"#1.-将数据定义在export-default之外\" href=\"#1.-将数据定义在export-default之外\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> bigData = &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>不能在模板内使用</li>\n<li>其中一个实例对象的内改变数据，另一个对象内的数据也会被改变\n<ul>\n<li>实质是定义在组件这个类上面的，是类的内部变量，被所有实例对象共享</li>\n</ul>\n</li>\n</ul>\n<p>应用场景：不需要在模板内使用的常量、不变配置项等</p>\n<h3 id=\"2.-将数据定义在组件的自定义属性中\">2. 将数据定义在组件的自定义属性中<a title=\"#2.-将数据定义在组件的自定义属性中\" href=\"#2.-将数据定义在组件的自定义属性中\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  <span class=\"attr\">bigData</span>: &#123; <span class=\"comment\">// 自定义属性</span></span><br><span class=\"line\">    ....</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    <span class=\"title function_\">doSomething</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$options</span>.<span class=\"property\">bigData</span> <span class=\"comment\">// 访问方式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>弊端在于数据的定义被分在了2个地方，添加的自定义属性对不了解的人会产生误解，使用时也会增加调用链</li>\n<li>如果数据更改，需要手动调用this.$forceUpdate()才能使模板更新</li>\n</ul>\n<h2 id=\"利用vue无法检测对象属性的添加来实现\">利用Vue无法检测对象属性的添加来实现<a title=\"#利用vue无法检测对象属性的添加来实现\" href=\"#利用vue无法检测对象属性的添加来实现\"></a></h2>\n<blockquote>\n<p>受现代 JavaScript 的限制 (而且 Object.observe 也已经被废弃)，Vue 无法检测到对象属性的添加或删除。由于 Vue 会在初始化实例时对属性执行 getter/setter 转化，所以属性必须在 data 对象上存在才能让 Vue 将它转换为响应式的</p>\n</blockquote>\n<h3 id=\"3.-在created或者mounted中使用-this.bigdata\">3. 在created或者mounted中使用 this.bigData<a title=\"#3.-在created或者mounted中使用-this.bigdata\" href=\"#3.-在created或者mounted中使用-this.bigdata\"></a></h3>\n<p>待实例完成初始化observe后，加入属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;&#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">created</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">bigData</span> = &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>同样的，数据的定义被分在了2个地方</li>\n</ul>\n<h2 id=\"剖析observe函数来寻找办法\">剖析observe函数来寻找办法<a title=\"#剖析observe函数来寻找办法\" href=\"#剖析observe函数来寻找办法\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">initData</span> (<span class=\"attr\">vm</span>: <span class=\"title class_\">Component</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> data = vm.<span class=\"property\">$options</span>.<span class=\"property\">data</span></span><br><span class=\"line\">  data = vm.<span class=\"property\">_data</span> = <span class=\"keyword\">typeof</span> data === <span class=\"string\">&#x27;function&#x27;</span></span><br><span class=\"line\">    ? <span class=\"title function_\">getData</span>(data, vm)</span><br><span class=\"line\">    : data || &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"title function_\">isPlainObject</span>(data)) &#123;</span><br><span class=\"line\">    data = &#123;&#125;</span><br><span class=\"line\">    process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">      <span class=\"string\">&#x27;data functions should return an object:\\n&#x27;</span> +</span><br><span class=\"line\">      <span class=\"string\">&#x27;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#x27;</span>,</span><br><span class=\"line\">      vm</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// proxy data on instance</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> keys = <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(data)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> props = vm.<span class=\"property\">$options</span>.<span class=\"property\">props</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> methods = vm.<span class=\"property\">$options</span>.<span class=\"property\">methods</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> i = keys.<span class=\"property\">length</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (i--) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> key = keys[i]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (methods &amp;&amp; <span class=\"title function_\">hasOwn</span>(methods, key)) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">          <span class=\"string\">`Method &quot;<span class=\"subst\">$&#123;key&#125;</span>&quot; has already been defined as a data property.`</span>,</span><br><span class=\"line\">          vm</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (props &amp;&amp; <span class=\"title function_\">hasOwn</span>(props, key)) &#123;</span><br><span class=\"line\">      process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp; <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">        <span class=\"string\">`The data property &quot;<span class=\"subst\">$&#123;key&#125;</span>&quot; is already declared as a prop. `</span> +</span><br><span class=\"line\">        <span class=\"string\">`Use prop default value instead.`</span>,</span><br><span class=\"line\">        vm</span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!<span class=\"title function_\">isReserved</span>(key)) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">proxy</span>(vm, <span class=\"string\">`_data`</span>, key)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// observe data</span></span><br><span class=\"line\">  <span class=\"title function_\">observe</span>(data, <span class=\"literal\">true</span> <span class=\"comment\">/* asRootData */</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Observer</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: any;</span><br><span class=\"line\">  <span class=\"attr\">dep</span>: <span class=\"title class_\">Dep</span>;</span><br><span class=\"line\">  <span class=\"attr\">vmCount</span>: number; <span class=\"comment\">// number of vms that have this object as root $data</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span> (<span class=\"attr\">value</span>: any) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">value</span> = value</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">dep</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Dep</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">vmCount</span> = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"title function_\">def</span>(value, <span class=\"string\">&#x27;__ob__&#x27;</span>, <span class=\"variable language_\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(value)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (hasProto) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">protoAugment</span>(value, arrayMethods)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">copyAugment</span>(value, arrayMethods, arrayKeys)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">observeArray</span>(value)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">walk</span>(value)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Walk through all properties and convert them into</span></span><br><span class=\"line\"><span class=\"comment\">   * getter/setters. This method should only be called when</span></span><br><span class=\"line\"><span class=\"comment\">   * value type is Object.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  walk (<span class=\"attr\">obj</span>: <span class=\"title class_\">Object</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> keys = <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(obj)  <span class=\"comment\">// 切入口2</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; keys.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">defineReactive</span>(obj, keys[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 省略</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Define a reactive property on an Object.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">defineReactive</span> (</span><br><span class=\"line\">  <span class=\"attr\">obj</span>: <span class=\"title class_\">Object</span>,</span><br><span class=\"line\">  <span class=\"attr\">key</span>: string,</span><br><span class=\"line\">  <span class=\"attr\">val</span>: any,</span><br><span class=\"line\">  customSetter?: ?<span class=\"title class_\">Function</span>,</span><br><span class=\"line\">  shallow?: boolean</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dep = <span class=\"keyword\">new</span> <span class=\"title class_\">Dep</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> property = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyDescriptor</span>(obj, key)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (property &amp;&amp; property.<span class=\"property\">configurable</span> === <span class=\"literal\">false</span>) &#123;  <span class=\"comment\">// 切入口3</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 省略响应式处理代码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Attempt to create an observer instance for a value,</span></span><br><span class=\"line\"><span class=\"comment\"> * returns the new observer if successfully observed,</span></span><br><span class=\"line\"><span class=\"comment\"> * or the existing observer if the value already has one.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">observe</span> (<span class=\"attr\">value</span>: any, <span class=\"attr\">asRootData</span>: ?boolean): <span class=\"title class_\">Observer</span> | <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"title function_\">isObject</span>(value) || value <span class=\"keyword\">instanceof</span> <span class=\"title class_\">VNode</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> <span class=\"attr\">ob</span>: <span class=\"title class_\">Observer</span> | <span class=\"keyword\">void</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">hasOwn</span>(value, <span class=\"string\">&#x27;__ob__&#x27;</span>) &amp;&amp; value.<span class=\"property\">__ob__</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Observer</span>) &#123;</span><br><span class=\"line\">    ob = value.<span class=\"property\">__ob__</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (</span><br><span class=\"line\">    shouldObserve &amp;&amp;</span><br><span class=\"line\">    !<span class=\"title function_\">isServerRendering</span>() &amp;&amp;</span><br><span class=\"line\">    (<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(value) || <span class=\"title function_\">isPlainObject</span>(value)) &amp;&amp;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">isExtensible</span>(value) &amp;&amp;  <span class=\"comment\">// 切入口1</span></span><br><span class=\"line\">    !value.<span class=\"property\">_isVue</span></span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    ob = <span class=\"keyword\">new</span> <span class=\"title class_\">Observer</span>(value)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (asRootData &amp;&amp; ob) &#123;</span><br><span class=\"line\">    ob.<span class=\"property\">vmCount</span>++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ob</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"4.-使用object.preventextensions和object.seal\">4. 使用Object.preventExtensions和Object.seal<a title=\"#4.-使用object.preventextensions和object.seal\" href=\"#4.-使用object.preventextensions和object.seal\"></a></h3>\n<blockquote>\n<p>Object.isExtensible(value)返回为false</p>\n</blockquote>\n<p>preventExtensions</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">bigData</span>: <span class=\"title class_\">Object</span>.<span class=\"title function_\">preventExtensions</span>(&#123;</span><br><span class=\"line\">        ···</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Object.freeze()</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = &#123; <span class=\"attr\">prop</span>: <span class=\"number\">1</span>, <span class=\"attr\">prop2</span>: <span class=\"number\">2</span> &#125; <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">freeze</span>(a) <span class=\"comment\">// &#123;prop: 1, prop2: 2&#125;</span></span><br><span class=\"line\">a.<span class=\"property\">prop</span> = <span class=\"number\">3</span> <span class=\"comment\">// 3</span></span><br><span class=\"line\">a <span class=\"comment\">// &#123;prop: 1, prop2: 2&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Object.freeze()冻结的是值，仍然可以将变量的引用替换掉</span></span><br><span class=\"line\">a = &#123;<span class=\"attr\">prop44</span>: <span class=\"number\">44</span>&#125; <span class=\"comment\">// &#123;prop44: 44&#125;</span></span><br><span class=\"line\">a <span class=\"comment\">// &#123;prop44: 44&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意区分const和Object.freeze</span></span><br><span class=\"line\"><span class=\"comment\">// const表示声明常量 不能再赋值 且声明时必须初始化</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">TEST</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"variable constant_\">TEST</span> = <span class=\"number\">2</span> <span class=\"comment\">// 报错:TypeError: Assignment to constant variable.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">deepFreeze</span> (obj) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> names = <span class=\"title class_\">Object</span>.<span class=\"title function_\">getOwnPropertyNames</span>(obj)</span><br><span class=\"line\">  names.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">name</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> property = obj[name]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">typeof</span>(property) === <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; property !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">deepFreeze</span>(property)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">freeze</span>(property)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当bigData值改变时，都需要重新调用一次</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">updateBigData (newBigData) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">bigData</span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">preventExtensions</span>(newBigData)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>这种写法bigData属性是响应式的，值改变后模板会自动更新；当然如果是bigData某个属性改变，仍然需要手动调用this.$forceUpdate()</p>\n<h3 id=\"5.-使属性不可枚举\">5. 使属性不可枚举<a title=\"#5.-使属性不可枚举\" href=\"#5.-使属性不可枚举\"></a></h3>\n<blockquote>\n<p>使挂载的数据key不在Object.keys(obj)返回的数组中</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">      <span class=\"attr\">bigData</span>: &#123;</span><br><span class=\"line\">        ···</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ··· <span class=\"comment\">// 其他属性</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(data, <span class=\"string\">&#x27;bigData&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"整体对比\">整体对比<a title=\"#整体对比\" href=\"#整体对比\"></a></h2>\n<p><img src=\"http://cdn.becase.top/20220901110405.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\" target=\"_blank\">Object.freeze() - JavaScript | MDN</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\" target=\"_blank\">Object.isFrozen() - JavaScript | MDN</a></p>\n<p><a href=\"https://juejin.cn/post/6855129007093596173\" target=\"_blank\">vue性能提升-非响应式数据</a></p>\n","prev":{"title":"关于js中一些看上去简单又不会写的题","link":"2022/05/13/关于js中一些看上去简单又不会写的题"},"next":{"title":"vue转react快速上手","link":"2022/04/25/vue转react快速上手"},"plink":"https://becase.top/2022/04/27/为Vue组件添加非响应式数据/","toc":[{"id":"避免把数据挂载到data内函数返回的对象上","title":"避免把数据挂载到data内函数返回的对象上","index":"1","children":[{"id":"1.-将数据定义在export-default之外","title":"1. 将数据定义在export default之外","index":"1.1"},{"id":"2.-将数据定义在组件的自定义属性中","title":"2. 将数据定义在组件的自定义属性中","index":"1.2"}]},{"id":"利用vue无法检测对象属性的添加来实现","title":"利用Vue无法检测对象属性的添加来实现","index":"2","children":[{"id":"3.-在created或者mounted中使用-this.bigdata","title":"3. 在created或者mounted中使用 this.bigData","index":"2.1"}]},{"id":"剖析observe函数来寻找办法","title":"剖析observe函数来寻找办法","index":"3","children":[{"id":"4.-使用object.preventextensions和object.seal","title":"4. 使用Object.preventExtensions和Object.seal","index":"3.1"},{"id":"5.-使属性不可枚举","title":"5. 使属性不可枚举","index":"3.2"}]},{"id":"整体对比","title":"整体对比","index":"4"},{"id":"参考","title":"参考","index":"5"}],"reading_time":"1352 words in 9 min"}